# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/srv/home/tirons/src/akvo/akvo/gui/main.ui'
#
# Created by: PyQt5 UI code generator 5.7.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 980)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(60, 60))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 980))
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setAutoFillBackground(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(0, 0))
        self.centralwidget.setMaximumSize(QtCore.QSize(1000, 980))
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setMaximumSize(QtCore.QSize(16777215, 980))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 967, 920))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QtCore.QSize(940, 0))
        self.tabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setMinimumSize(QtCore.QSize(940, 870))
        self.tab.setObjectName("tab")
        self.inputRAWParametersBox = QtWidgets.QGroupBox(self.tab)
        self.inputRAWParametersBox.setEnabled(False)
        self.inputRAWParametersBox.setGeometry(QtCore.QRect(5, 750, 460, 125))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inputRAWParametersBox.sizePolicy().hasHeightForWidth())
        self.inputRAWParametersBox.setSizePolicy(sizePolicy)
        self.inputRAWParametersBox.setMinimumSize(QtCore.QSize(460, 125))
        self.inputRAWParametersBox.setObjectName("inputRAWParametersBox")
        self.stacksLineEdit = QtWidgets.QLineEdit(self.inputRAWParametersBox)
        self.stacksLineEdit.setGeometry(QtCore.QRect(110, 30, 91, 21))
        self.stacksLineEdit.setToolTip("<html><head/><body><p>Set the stacks that you would like processed.</p><p>This must be a valid set of numpy array indices. Remember that Python uses non end-inclusive indexing. </p><p>So things like [1:24] will include stacks 1-23</p><p>Furthermore [1:8,12:24] will include stacks 1-7 and 12:23. Any list of valid indices will be accepted, but they must be comma seperated. </p></body></html>")
        self.stacksLineEdit.setObjectName("stacksLineEdit")
        self.label = QtWidgets.QLabel(self.inputRAWParametersBox)
        self.label.setGeometry(QtCore.QRect(10, 30, 51, 20))
        self.label.setToolTip("")
        self.label.setStatusTip("")
        self.label.setObjectName("label")
        self.label_23 = QtWidgets.QLabel(self.inputRAWParametersBox)
        self.label_23.setGeometry(QtCore.QRect(10, 65, 101, 16))
        self.label_23.setObjectName("label_23")
        self.dataChanLineEdit = QtWidgets.QLineEdit(self.inputRAWParametersBox)
        self.dataChanLineEdit.setGeometry(QtCore.QRect(110, 60, 91, 21))
        self.dataChanLineEdit.setObjectName("dataChanLineEdit")
        self.label_24 = QtWidgets.QLabel(self.inputRAWParametersBox)
        self.label_24.setGeometry(QtCore.QRect(220, 36, 101, 16))
        self.label_24.setObjectName("label_24")
        self.DeadTimeSpinBox = QtWidgets.QDoubleSpinBox(self.inputRAWParametersBox)
        self.DeadTimeSpinBox.setGeometry(QtCore.QRect(360, 30, 91, 25))
        self.DeadTimeSpinBox.setMinimum(0.5)
        self.DeadTimeSpinBox.setSingleStep(0.5)
        self.DeadTimeSpinBox.setProperty("value", 5.0)
        self.DeadTimeSpinBox.setObjectName("DeadTimeSpinBox")
        self.label_28 = QtWidgets.QLabel(self.inputRAWParametersBox)
        self.label_28.setGeometry(QtCore.QRect(220, 64, 131, 16))
        self.label_28.setObjectName("label_28")
        self.refChanLineEdit = QtWidgets.QLineEdit(self.inputRAWParametersBox)
        self.refChanLineEdit.setGeometry(QtCore.QRect(360, 60, 91, 21))
        self.refChanLineEdit.setText("")
        self.refChanLineEdit.setObjectName("refChanLineEdit")
        self.label_29 = QtWidgets.QLabel(self.inputRAWParametersBox)
        self.label_29.setGeometry(QtCore.QRect(10, 95, 91, 16))
        self.label_29.setObjectName("label_29")
        self.FIDProcComboBox = QtWidgets.QComboBox(self.inputRAWParametersBox)
        self.FIDProcComboBox.setGeometry(QtCore.QRect(110, 90, 91, 25))
        self.FIDProcComboBox.setObjectName("FIDProcComboBox")
        self.loadDataPushButton = QtWidgets.QPushButton(self.inputRAWParametersBox)
        self.loadDataPushButton.setEnabled(False)
        self.loadDataPushButton.setGeometry(QtCore.QRect(360, 90, 91, 31))
        self.loadDataPushButton.setStyleSheet("#loadDataPushButton {\n"
"    background: green;\n"
"}\n"
"\n"
"#loadDataPushButton:disabled {\n"
"    background: black;\n"
"}")
        self.loadDataPushButton.setObjectName("loadDataPushButton")
        self.plotImportCheckBox = QtWidgets.QCheckBox(self.inputRAWParametersBox)
        self.plotImportCheckBox.setEnabled(False)
        self.plotImportCheckBox.setGeometry(QtCore.QRect(225, 90, 81, 21))
        self.plotImportCheckBox.setChecked(True)
        self.plotImportCheckBox.setObjectName("plotImportCheckBox")
        self.BandPassBox = QtWidgets.QGroupBox(self.tab)
        self.BandPassBox.setEnabled(False)
        self.BandPassBox.setGeometry(QtCore.QRect(470, 240, 480, 180))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BandPassBox.sizePolicy().hasHeightForWidth())
        self.BandPassBox.setSizePolicy(sizePolicy)
        self.BandPassBox.setMinimumSize(QtCore.QSize(480, 180))
        self.BandPassBox.setCheckable(True)
        self.BandPassBox.setChecked(False)
        self.BandPassBox.setObjectName("BandPassBox")
        self.fTypeComboBox = QtWidgets.QComboBox(self.BandPassBox)
        self.fTypeComboBox.setGeometry(QtCore.QRect(200, 50, 141, 22))
        self.fTypeComboBox.setMouseTracking(True)
        self.fTypeComboBox.setToolTip("")
        self.fTypeComboBox.setStatusTip("")
        self.fTypeComboBox.setWhatsThis("")
        self.fTypeComboBox.setObjectName("fTypeComboBox")
        self.fTypeComboBox.addItem("")
        self.fTypeComboBox.addItem("")
        self.fTypeComboBox.addItem("")
        self.bandPassGO = QtWidgets.QPushButton(self.BandPassBox)
        self.bandPassGO.setGeometry(QtCore.QRect(370, 150, 99, 23))
        self.bandPassGO.setStyleSheet("#bandPassGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#bandPassGO:disabled{\n"
"    background: black;\n"
"}")
        self.bandPassGO.setObjectName("bandPassGO")
        self.passBandSpinBox = QtWidgets.QDoubleSpinBox(self.BandPassBox)
        self.passBandSpinBox.setGeometry(QtCore.QRect(110, 60, 71, 22))
        self.passBandSpinBox.setMinimum(25.0)
        self.passBandSpinBox.setMaximum(500.0)
        self.passBandSpinBox.setSingleStep(5.0)
        self.passBandSpinBox.setProperty("value", 50.0)
        self.passBandSpinBox.setObjectName("passBandSpinBox")
        self.stopBandSpinBox = QtWidgets.QDoubleSpinBox(self.BandPassBox)
        self.stopBandSpinBox.setGeometry(QtCore.QRect(110, 90, 71, 22))
        self.stopBandSpinBox.setMinimum(100.0)
        self.stopBandSpinBox.setMaximum(1000.0)
        self.stopBandSpinBox.setProperty("value", 280.0)
        self.stopBandSpinBox.setObjectName("stopBandSpinBox")
        self.label_19 = QtWidgets.QLabel(self.BandPassBox)
        self.label_19.setGeometry(QtCore.QRect(10, 62, 91, 16))
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.BandPassBox)
        self.label_20.setGeometry(QtCore.QRect(10, 93, 91, 16))
        self.label_20.setObjectName("label_20")
        self.filterDesignPushButton = QtWidgets.QPushButton(self.BandPassBox)
        self.filterDesignPushButton.setGeometry(QtCore.QRect(370, 120, 99, 23))
        self.filterDesignPushButton.setStyleSheet("")
        self.filterDesignPushButton.setObjectName("filterDesignPushButton")
        self.lcdNumberFilterOrder = QtWidgets.QLCDNumber(self.BandPassBox)
        self.lcdNumberFilterOrder.setGeometry(QtCore.QRect(290, 100, 64, 23))
        self.lcdNumberFilterOrder.setStyleSheet("#lcdNumberFilterOrder {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberFilterOrder:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberFilterOrder.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberFilterOrder.setObjectName("lcdNumberFilterOrder")
        self.lcdNumberFTauDead = QtWidgets.QLCDNumber(self.BandPassBox)
        self.lcdNumberFTauDead.setGeometry(QtCore.QRect(290, 140, 64, 23))
        self.lcdNumberFTauDead.setStyleSheet("#lcdNumberFTauDead {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberFTauDead:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberFTauDead.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberFTauDead.setObjectName("lcdNumberFTauDead")
        self.label_18 = QtWidgets.QLabel(self.BandPassBox)
        self.label_18.setGeometry(QtCore.QRect(190, 104, 57, 14))
        self.label_18.setObjectName("label_18")
        self.label_21 = QtWidgets.QLabel(self.BandPassBox)
        self.label_21.setGeometry(QtCore.QRect(190, 142, 101, 20))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.BandPassBox)
        self.label_22.setGeometry(QtCore.QRect(10, 122, 81, 16))
        self.label_22.setObjectName("label_22")
        self.label_32 = QtWidgets.QLabel(self.BandPassBox)
        self.label_32.setGeometry(QtCore.QRect(10, 153, 71, 16))
        self.label_32.setObjectName("label_32")
        self.gpassSpinBox = QtWidgets.QDoubleSpinBox(self.BandPassBox)
        self.gpassSpinBox.setGeometry(QtCore.QRect(110, 120, 71, 22))
        self.gpassSpinBox.setSuffix("")
        self.gpassSpinBox.setDecimals(3)
        self.gpassSpinBox.setMaximum(1.0)
        self.gpassSpinBox.setSingleStep(0.01)
        self.gpassSpinBox.setProperty("value", 0.01)
        self.gpassSpinBox.setObjectName("gpassSpinBox")
        self.gstopSpinBox = QtWidgets.QDoubleSpinBox(self.BandPassBox)
        self.gstopSpinBox.setGeometry(QtCore.QRect(110, 150, 71, 22))
        self.gstopSpinBox.setProperty("value", 5.0)
        self.gstopSpinBox.setObjectName("gstopSpinBox")
        self.CentralVSpinBox = QtWidgets.QDoubleSpinBox(self.BandPassBox)
        self.CentralVSpinBox.setGeometry(QtCore.QRect(110, 30, 71, 25))
        self.CentralVSpinBox.setDecimals(0)
        self.CentralVSpinBox.setMinimum(100.0)
        self.CentralVSpinBox.setMaximum(5001.0)
        self.CentralVSpinBox.setSingleStep(1.0)
        self.CentralVSpinBox.setProperty("value", 1000.0)
        self.CentralVSpinBox.setObjectName("CentralVSpinBox")
        self.label_30 = QtWidgets.QLabel(self.BandPassBox)
        self.label_30.setGeometry(QtCore.QRect(10, 33, 91, 16))
        self.label_30.setObjectName("label_30")
        self.label_10 = QtWidgets.QLabel(self.BandPassBox)
        self.label_10.setGeometry(QtCore.QRect(250, 30, 41, 16))
        self.label_10.setObjectName("label_10")
        self.pushButton_4 = QtWidgets.QPushButton(self.BandPassBox)
        self.pushButton_4.setGeometry(QtCore.QRect(370, 250, 99, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.headerFileBox = QtWidgets.QGroupBox(self.tab)
        self.headerFileBox.setEnabled(False)
        self.headerFileBox.setGeometry(QtCore.QRect(5, 510, 460, 230))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.headerFileBox.sizePolicy().hasHeightForWidth())
        self.headerFileBox.setSizePolicy(sizePolicy)
        self.headerFileBox.setMinimumSize(QtCore.QSize(460, 230))
        self.headerFileBox.setAutoFillBackground(False)
        self.headerFileBox.setFlat(False)
        self.headerFileBox.setObjectName("headerFileBox")
        self.headerFileTextBrowser = QtWidgets.QTextBrowser(self.headerFileBox)
        self.headerFileTextBrowser.setGeometry(QtCore.QRect(10, 20, 441, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.headerFileTextBrowser.sizePolicy().hasHeightForWidth())
        self.headerFileTextBrowser.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setItalic(True)
        self.headerFileTextBrowser.setFont(font)
        self.headerFileTextBrowser.setObjectName("headerFileTextBrowser")
        self.label_4 = QtWidgets.QLabel(self.headerFileBox)
        self.label_4.setGeometry(QtCore.QRect(10, 70, 81, 21))
        self.label_4.setObjectName("label_4")
        self.pulseTypeTextBrowser = QtWidgets.QTextBrowser(self.headerFileBox)
        self.pulseTypeTextBrowser.setGeometry(QtCore.QRect(90, 70, 361, 23))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pulseTypeTextBrowser.sizePolicy().hasHeightForWidth())
        self.pulseTypeTextBrowser.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setItalic(True)
        self.pulseTypeTextBrowser.setFont(font)
        self.pulseTypeTextBrowser.setAcceptDrops(True)
        self.pulseTypeTextBrowser.setToolTip("")
        self.pulseTypeTextBrowser.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pulseTypeTextBrowser.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pulseTypeTextBrowser.setObjectName("pulseTypeTextBrowser")
        self.lcdNumberNuTx = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberNuTx.setGeometry(QtCore.QRect(160, 100, 64, 23))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lcdNumberNuTx.sizePolicy().hasHeightForWidth())
        self.lcdNumberNuTx.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lcdNumberNuTx.setFont(font)
        self.lcdNumberNuTx.setWhatsThis("")
        self.lcdNumberNuTx.setAutoFillBackground(False)
        self.lcdNumberNuTx.setStyleSheet("#lcdNumberNuTx {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberNuTx:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberNuTx.setFrameShadow(QtWidgets.QFrame.Raised)
        self.lcdNumberNuTx.setLineWidth(1)
        self.lcdNumberNuTx.setMidLineWidth(0)
        self.lcdNumberNuTx.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberNuTx.setProperty("value", 0.0)
        self.lcdNumberNuTx.setObjectName("lcdNumberNuTx")
        self.lcdNumberTuneuF = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberTuneuF.setGeometry(QtCore.QRect(370, 100, 64, 23))
        self.lcdNumberTuneuF.setStyleSheet("#lcdNumberTuneuF {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberTuneuF:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberTuneuF.setLineWidth(1)
        self.lcdNumberTuneuF.setMidLineWidth(0)
        self.lcdNumberTuneuF.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberTuneuF.setObjectName("lcdNumberTuneuF")
        self.lcdNumberTauPulse1 = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberTauPulse1.setGeometry(QtCore.QRect(160, 130, 64, 23))
        self.lcdNumberTauPulse1.setStyleSheet("#lcdNumberTauPulse1 {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberTauPulse1:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberTauPulse1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.lcdNumberTauPulse1.setLineWidth(1)
        self.lcdNumberTauPulse1.setMidLineWidth(0)
        self.lcdNumberTauPulse1.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberTauPulse1.setObjectName("lcdNumberTauPulse1")
        self.label_6 = QtWidgets.QLabel(self.headerFileBox)
        self.label_6.setGeometry(QtCore.QRect(10, 100, 91, 21))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.headerFileBox)
        self.label_7.setGeometry(QtCore.QRect(10, 130, 141, 21))
        self.label_7.setObjectName("label_7")
        self.label_13 = QtWidgets.QLabel(self.headerFileBox)
        self.label_13.setGeometry(QtCore.QRect(250, 160, 91, 21))
        self.label_13.setObjectName("label_13")
        self.lcdNumberTauPulse2 = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberTauPulse2.setGeometry(QtCore.QRect(160, 160, 64, 23))
        self.lcdNumberTauPulse2.setStyleSheet("#lcdNumberTauPulse2 {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberTauPulse2:disabled{\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberTauPulse2.setLineWidth(1)
        self.lcdNumberTauPulse2.setMidLineWidth(0)
        self.lcdNumberTauPulse2.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberTauPulse2.setObjectName("lcdNumberTauPulse2")
        self.label_14 = QtWidgets.QLabel(self.headerFileBox)
        self.label_14.setGeometry(QtCore.QRect(250, 100, 111, 21))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.headerFileBox)
        self.label_15.setGeometry(QtCore.QRect(250, 130, 111, 21))
        self.label_15.setObjectName("label_15")
        self.lcdNumberSampFreq = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberSampFreq.setEnabled(False)
        self.lcdNumberSampFreq.setGeometry(QtCore.QRect(370, 130, 64, 23))
        self.lcdNumberSampFreq.setStyleSheet("#lcdNumberSampFreq {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberSampFreq:disabled{\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberSampFreq.setLineWidth(1)
        self.lcdNumberSampFreq.setMidLineWidth(0)
        self.lcdNumberSampFreq.setDigitCount(5)
        self.lcdNumberSampFreq.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberSampFreq.setObjectName("lcdNumberSampFreq")
        self.lcdNumberTauDelay = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberTauDelay.setEnabled(False)
        self.lcdNumberTauDelay.setGeometry(QtCore.QRect(370, 160, 64, 23))
        self.lcdNumberTauDelay.setStyleSheet("#lcdNumberTauDelay {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberTauDelay:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberTauDelay.setLineWidth(1)
        self.lcdNumberTauDelay.setMidLineWidth(0)
        self.lcdNumberTauDelay.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberTauDelay.setObjectName("lcdNumberTauDelay")
        self.label_16 = QtWidgets.QLabel(self.headerFileBox)
        self.label_16.setGeometry(QtCore.QRect(10, 160, 131, 21))
        self.label_16.setObjectName("label_16")
        self.lcdNumberNQ = QtWidgets.QLCDNumber(self.headerFileBox)
        self.lcdNumberNQ.setGeometry(QtCore.QRect(160, 190, 64, 23))
        self.lcdNumberNQ.setStyleSheet("#lcdNumberNQ {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberNQ:disabled{\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberNQ.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberNQ.setObjectName("lcdNumberNQ")
        self.label_9 = QtWidgets.QLabel(self.headerFileBox)
        self.label_9.setGeometry(QtCore.QRect(10, 190, 141, 21))
        self.label_9.setObjectName("label_9")
        self.downSampleGroupBox = QtWidgets.QGroupBox(self.tab)
        self.downSampleGroupBox.setEnabled(False)
        self.downSampleGroupBox.setGeometry(QtCore.QRect(470, 20, 480, 90))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.downSampleGroupBox.sizePolicy().hasHeightForWidth())
        self.downSampleGroupBox.setSizePolicy(sizePolicy)
        self.downSampleGroupBox.setMinimumSize(QtCore.QSize(480, 90))
        self.downSampleGroupBox.setCheckable(True)
        self.downSampleGroupBox.setObjectName("downSampleGroupBox")
        self.label_3 = QtWidgets.QLabel(self.downSampleGroupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 33, 111, 16))
        self.label_3.setObjectName("label_3")
        self.truncateSpinBox = QtWidgets.QSpinBox(self.downSampleGroupBox)
        self.truncateSpinBox.setGeometry(QtCore.QRect(170, 30, 101, 25))
        self.truncateSpinBox.setMaximum(1000)
        self.truncateSpinBox.setProperty("value", 0)
        self.truncateSpinBox.setObjectName("truncateSpinBox")
        self.downSampleGO = QtWidgets.QPushButton(self.downSampleGroupBox)
        self.downSampleGO.setGeometry(QtCore.QRect(370, 60, 99, 23))
        self.downSampleGO.setStyleSheet("#downSampleGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#downSampleGO:disabled{\n"
"    background: black;\n"
"}")
        self.downSampleGO.setObjectName("downSampleGO")
        self.label_12 = QtWidgets.QLabel(self.downSampleGroupBox)
        self.label_12.setGeometry(QtCore.QRect(10, 63, 131, 16))
        self.label_12.setObjectName("label_12")
        self.downSampleSpinBox = QtWidgets.QSpinBox(self.downSampleGroupBox)
        self.downSampleSpinBox.setGeometry(QtCore.QRect(170, 60, 101, 25))
        self.downSampleSpinBox.setMaximum(5)
        self.downSampleSpinBox.setProperty("value", 5)
        self.downSampleSpinBox.setObjectName("downSampleSpinBox")
        self.mplwidget = MyDynamicMplCanvas(self.tab)
        self.mplwidget.setGeometry(QtCore.QRect(3, 10, 460, 460))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mplwidget.sizePolicy().hasHeightForWidth())
        self.mplwidget.setSizePolicy(sizePolicy)
        self.mplwidget.setMinimumSize(QtCore.QSize(460, 460))
        self.mplwidget.setObjectName("mplwidget")
        self.mplwidget_navigator = MyDynamicMplCanvasNavigator(self.tab)
        self.mplwidget_navigator.setGeometry(QtCore.QRect(3, 470, 460, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mplwidget_navigator.sizePolicy().hasHeightForWidth())
        self.mplwidget_navigator.setSizePolicy(sizePolicy)
        self.mplwidget_navigator.setMinimumSize(QtCore.QSize(460, 30))
        self.mplwidget_navigator.setObjectName("mplwidget_navigator")
        self.adaptBox = QtWidgets.QGroupBox(self.tab)
        self.adaptBox.setEnabled(False)
        self.adaptBox.setGeometry(QtCore.QRect(470, 440, 480, 120))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.adaptBox.sizePolicy().hasHeightForWidth())
        self.adaptBox.setSizePolicy(sizePolicy)
        self.adaptBox.setMinimumSize(QtCore.QSize(480, 120))
        self.adaptBox.setFlat(False)
        self.adaptBox.setCheckable(True)
        self.adaptBox.setObjectName("adaptBox")
        self.adaptGO = QtWidgets.QPushButton(self.adaptBox)
        self.adaptGO.setGeometry(QtCore.QRect(370, 90, 99, 23))
        self.adaptGO.setStyleSheet("#adaptGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#adaptGO:disabled{\n"
"    background: black;\n"
"}")
        self.adaptGO.setObjectName("adaptGO")
        self.MTapsSpinBox = QtWidgets.QSpinBox(self.adaptBox)
        self.MTapsSpinBox.setGeometry(QtCore.QRect(150, 30, 71, 22))
        self.MTapsSpinBox.setMaximum(2000)
        self.MTapsSpinBox.setProperty("value", 200)
        self.MTapsSpinBox.setObjectName("MTapsSpinBox")
        self.adaptLambdaSpinBox = QtWidgets.QDoubleSpinBox(self.adaptBox)
        self.adaptLambdaSpinBox.setGeometry(QtCore.QRect(150, 60, 71, 22))
        self.adaptLambdaSpinBox.setMinimum(0.2)
        self.adaptLambdaSpinBox.setMaximum(1.0)
        self.adaptLambdaSpinBox.setProperty("value", 0.99)
        self.adaptLambdaSpinBox.setObjectName("adaptLambdaSpinBox")
        self.label_41 = QtWidgets.QLabel(self.adaptBox)
        self.label_41.setGeometry(QtCore.QRect(10, 32, 71, 16))
        self.label_41.setObjectName("label_41")
        self.label_42 = QtWidgets.QLabel(self.adaptBox)
        self.label_42.setGeometry(QtCore.QRect(10, 62, 131, 16))
        self.label_42.setObjectName("label_42")
        self.label_43 = QtWidgets.QLabel(self.adaptBox)
        self.label_43.setGeometry(QtCore.QRect(10, 92, 111, 16))
        self.label_43.setObjectName("label_43")
        self.adaptTruncateSpinBox = QtWidgets.QDoubleSpinBox(self.adaptBox)
        self.adaptTruncateSpinBox.setGeometry(QtCore.QRect(150, 90, 71, 22))
        self.adaptTruncateSpinBox.setMaximum(1000.0)
        self.adaptTruncateSpinBox.setProperty("value", 800.0)
        self.adaptTruncateSpinBox.setObjectName("adaptTruncateSpinBox")
        self.adaptMuSpinBox = QtWidgets.QDoubleSpinBox(self.adaptBox)
        self.adaptMuSpinBox.setGeometry(QtCore.QRect(380, 30, 81, 22))
        self.adaptMuSpinBox.setDecimals(4)
        self.adaptMuSpinBox.setMinimum(0.0001)
        self.adaptMuSpinBox.setMaximum(0.1)
        self.adaptMuSpinBox.setSingleStep(0.0001)
        self.adaptMuSpinBox.setProperty("value", 0.01)
        self.adaptMuSpinBox.setObjectName("adaptMuSpinBox")
        self.label_44 = QtWidgets.QLabel(self.adaptBox)
        self.label_44.setGeometry(QtCore.QRect(280, 30, 57, 14))
        self.label_44.setObjectName("label_44")
        self.windowFilterGroupBox = QtWidgets.QGroupBox(self.tab)
        self.windowFilterGroupBox.setEnabled(False)
        self.windowFilterGroupBox.setGeometry(QtCore.QRect(470, 130, 480, 90))
        self.windowFilterGroupBox.setMinimumSize(QtCore.QSize(0, 90))
        self.windowFilterGroupBox.setCheckable(True)
        self.windowFilterGroupBox.setObjectName("windowFilterGroupBox")
        self.windowTypeComboBox = QtWidgets.QComboBox(self.windowFilterGroupBox)
        self.windowTypeComboBox.setGeometry(QtCore.QRect(120, 30, 111, 23))
        self.windowTypeComboBox.setObjectName("windowTypeComboBox")
        self.windowTypeComboBox.addItem("")
        self.windowTypeComboBox.addItem("")
        self.windowTypeComboBox.addItem("")
        self.windowTypeComboBox.addItem("")
        self.label_45 = QtWidgets.QLabel(self.windowFilterGroupBox)
        self.label_45.setGeometry(QtCore.QRect(20, 35, 57, 14))
        self.label_45.setObjectName("label_45")
        self.label_48 = QtWidgets.QLabel(self.windowFilterGroupBox)
        self.label_48.setGeometry(QtCore.QRect(20, 63, 71, 16))
        self.label_48.setObjectName("label_48")
        self.windowBandwidthSpinBox = QtWidgets.QDoubleSpinBox(self.windowFilterGroupBox)
        self.windowBandwidthSpinBox.setGeometry(QtCore.QRect(120, 60, 111, 22))
        self.windowBandwidthSpinBox.setDecimals(1)
        self.windowBandwidthSpinBox.setMaximum(1000.0)
        self.windowBandwidthSpinBox.setProperty("value", 600.0)
        self.windowBandwidthSpinBox.setObjectName("windowBandwidthSpinBox")
        self.windowFilterGO = QtWidgets.QPushButton(self.windowFilterGroupBox)
        self.windowFilterGO.setGeometry(QtCore.QRect(370, 60, 99, 23))
        self.windowFilterGO.setStyleSheet("#windowFilterGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#windowFilterGO:disabled{\n"
"    background: black;\n"
"}")
        self.windowFilterGO.setObjectName("windowFilterGO")
        self.label_49 = QtWidgets.QLabel(self.windowFilterGroupBox)
        self.label_49.setGeometry(QtCore.QRect(250, 33, 191, 16))
        self.label_49.setObjectName("label_49")
        self.ProcessedBox = QtWidgets.QGroupBox(self.tab)
        self.ProcessedBox.setEnabled(False)
        self.ProcessedBox.setGeometry(QtCore.QRect(470, 750, 480, 101))
        self.ProcessedBox.setMinimumSize(QtCore.QSize(0, 100))
        self.ProcessedBox.setObjectName("ProcessedBox")
        self.label_17 = QtWidgets.QLabel(self.ProcessedBox)
        self.label_17.setGeometry(QtCore.QRect(20, 33, 111, 16))
        self.label_17.setObjectName("label_17")
        self.lcdNumberFID1Length = QtWidgets.QLCDNumber(self.ProcessedBox)
        self.lcdNumberFID1Length.setEnabled(False)
        self.lcdNumberFID1Length.setGeometry(QtCore.QRect(150, 30, 64, 23))
        self.lcdNumberFID1Length.setStyleSheet("#lcdNumberFID1Length {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberFID1Length:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberFID1Length.setLineWidth(1)
        self.lcdNumberFID1Length.setMidLineWidth(0)
        self.lcdNumberFID1Length.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberFID1Length.setObjectName("lcdNumberFID1Length")
        self.lcdNumberFID2Length = QtWidgets.QLCDNumber(self.ProcessedBox)
        self.lcdNumberFID2Length.setEnabled(False)
        self.lcdNumberFID2Length.setGeometry(QtCore.QRect(150, 60, 64, 23))
        self.lcdNumberFID2Length.setStyleSheet("#lcdNumberFID2Length {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberFID2Length:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberFID2Length.setLineWidth(1)
        self.lcdNumberFID2Length.setMidLineWidth(0)
        self.lcdNumberFID2Length.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberFID2Length.setObjectName("lcdNumberFID2Length")
        self.label_39 = QtWidgets.QLabel(self.ProcessedBox)
        self.label_39.setGeometry(QtCore.QRect(20, 63, 111, 16))
        self.label_39.setObjectName("label_39")
        self.lcdNumberResampFreq = QtWidgets.QLCDNumber(self.ProcessedBox)
        self.lcdNumberResampFreq.setEnabled(False)
        self.lcdNumberResampFreq.setGeometry(QtCore.QRect(370, 33, 64, 23))
        self.lcdNumberResampFreq.setStyleSheet("#lcdNumberResampFreq {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdNumberResampFreq:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdNumberResampFreq.setLineWidth(1)
        self.lcdNumberResampFreq.setMidLineWidth(0)
        self.lcdNumberResampFreq.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumberResampFreq.setObjectName("lcdNumberResampFreq")
        self.label_40 = QtWidgets.QLabel(self.ProcessedBox)
        self.label_40.setGeometry(QtCore.QRect(240, 33, 121, 21))
        self.label_40.setObjectName("label_40")
        self.label_47 = QtWidgets.QLabel(self.ProcessedBox)
        self.label_47.setGeometry(QtCore.QRect(240, 63, 121, 16))
        self.label_47.setObjectName("label_47")
        self.lcdTotalDeadTime = QtWidgets.QLCDNumber(self.ProcessedBox)
        self.lcdTotalDeadTime.setEnabled(False)
        self.lcdTotalDeadTime.setGeometry(QtCore.QRect(370, 60, 64, 23))
        self.lcdTotalDeadTime.setStyleSheet("#lcdTotalDeadTime {\n"
"color: green;\n"
"background: black;\n"
"}\n"
"\n"
"#lcdTotalDeadTime:disabled {\n"
"color: grey;\n"
"background: dark grey;\n"
"}")
        self.lcdTotalDeadTime.setLineWidth(1)
        self.lcdTotalDeadTime.setMidLineWidth(0)
        self.lcdTotalDeadTime.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdTotalDeadTime.setObjectName("lcdTotalDeadTime")
        self.sumDataBox = QtWidgets.QGroupBox(self.tab)
        self.sumDataBox.setEnabled(False)
        self.sumDataBox.setGeometry(QtCore.QRect(480, 580, 461, 80))
        self.sumDataBox.setCheckable(True)
        self.sumDataBox.setObjectName("sumDataBox")
        self.sumDataGO = QtWidgets.QPushButton(self.sumDataBox)
        self.sumDataGO.setGeometry(QtCore.QRect(360, 50, 99, 23))
        self.sumDataGO.setStyleSheet("#sumDataGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#sumDataGO:disabled{\n"
"    background: black;\n"
"}")
        self.sumDataGO.setObjectName("sumDataGO")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.mplwidget_2 = MyDynamicMplCanvas(self.tab_3)
        self.mplwidget_2.setGeometry(QtCore.QRect(3, 10, 460, 460))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mplwidget_2.sizePolicy().hasHeightForWidth())
        self.mplwidget_2.setSizePolicy(sizePolicy)
        self.mplwidget_2.setMinimumSize(QtCore.QSize(460, 460))
        self.mplwidget_2.setObjectName("mplwidget_2")
        self.mplwidget_navigator_2 = MyDynamicMplCanvasNavigator(self.tab_3)
        self.mplwidget_navigator_2.setGeometry(QtCore.QRect(3, 470, 460, 30))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mplwidget_navigator_2.sizePolicy().hasHeightForWidth())
        self.mplwidget_navigator_2.setSizePolicy(sizePolicy)
        self.mplwidget_navigator_2.setMinimumSize(QtCore.QSize(460, 30))
        self.mplwidget_navigator_2.setObjectName("mplwidget_navigator_2")
        self.FDSmartStackGroupBox = QtWidgets.QGroupBox(self.tab_3)
        self.FDSmartStackGroupBox.setEnabled(False)
        self.FDSmartStackGroupBox.setGeometry(QtCore.QRect(480, 120, 480, 100))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FDSmartStackGroupBox.sizePolicy().hasHeightForWidth())
        self.FDSmartStackGroupBox.setSizePolicy(sizePolicy)
        self.FDSmartStackGroupBox.setMinimumSize(QtCore.QSize(480, 100))
        self.FDSmartStackGroupBox.setCheckable(True)
        self.FDSmartStackGroupBox.setObjectName("FDSmartStackGroupBox")
        self.outlierTestCB = QtWidgets.QComboBox(self.FDSmartStackGroupBox)
        self.outlierTestCB.setGeometry(QtCore.QRect(104, 65, 78, 25))
        self.outlierTestCB.setObjectName("outlierTestCB")
        self.outlierTestCB.addItem("")
        self.outlierTestCB.addItem("")
        self.label_5 = QtWidgets.QLabel(self.FDSmartStackGroupBox)
        self.label_5.setGeometry(QtCore.QRect(20, 70, 71, 16))
        self.label_5.setObjectName("label_5")
        self.FDSmartStackGO = QtWidgets.QPushButton(self.FDSmartStackGroupBox)
        self.FDSmartStackGO.setGeometry(QtCore.QRect(350, 70, 99, 23))
        self.FDSmartStackGO.setStyleSheet("#FDSmartStackGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#FDSmartStackGO:disabled{\n"
"    background: black;\n"
"}")
        self.FDSmartStackGO.setObjectName("FDSmartStackGO")
        self.qCalcGroupBox = QtWidgets.QGroupBox(self.tab_3)
        self.qCalcGroupBox.setEnabled(False)
        self.qCalcGroupBox.setGeometry(QtCore.QRect(480, 10, 461, 101))
        self.qCalcGroupBox.setCheckable(True)
        self.qCalcGroupBox.setObjectName("qCalcGroupBox")
        self.calcQGO = QtWidgets.QPushButton(self.qCalcGroupBox)
        self.calcQGO.setGeometry(QtCore.QRect(350, 70, 99, 23))
        self.calcQGO.setStyleSheet("#calcQGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#calcQGO:disabled{\n"
"    background: black;\n"
"}")
        self.calcQGO.setObjectName("calcQGO")
        self.qdGroupBox = QtWidgets.QGroupBox(self.tab_3)
        self.qdGroupBox.setEnabled(False)
        self.qdGroupBox.setGeometry(QtCore.QRect(479, 230, 461, 101))
        self.qdGroupBox.setCheckable(True)
        self.qdGroupBox.setObjectName("qdGroupBox")
        self.qdGO = QtWidgets.QPushButton(self.qdGroupBox)
        self.qdGO.setGeometry(QtCore.QRect(350, 70, 99, 23))
        self.qdGO.setStyleSheet("#qdGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#qdGO:disabled{\n"
"    background: black;\n"
"}")
        self.qdGO.setObjectName("qdGO")
        self.trimSpin = QtWidgets.QSpinBox(self.qdGroupBox)
        self.trimSpin.setGeometry(QtCore.QRect(90, 60, 64, 28))
        self.trimSpin.setMinimum(1)
        self.trimSpin.setObjectName("trimSpin")
        self.phaseCheck = QtWidgets.QCheckBox(self.qdGroupBox)
        self.phaseCheck.setGeometry(QtCore.QRect(170, 64, 121, 23))
        self.phaseCheck.setObjectName("phaseCheck")
        self.label_35 = QtWidgets.QLabel(self.qdGroupBox)
        self.label_35.setGeometry(QtCore.QRect(13, 65, 70, 18))
        self.label_35.setObjectName("label_35")
        self.gateBox = QtWidgets.QGroupBox(self.tab_3)
        self.gateBox.setEnabled(False)
        self.gateBox.setGeometry(QtCore.QRect(480, 340, 461, 91))
        self.gateBox.setCheckable(True)
        self.gateBox.setObjectName("gateBox")
        self.gateIntegrateGO = QtWidgets.QPushButton(self.gateBox)
        self.gateIntegrateGO.setGeometry(QtCore.QRect(350, 60, 99, 23))
        self.gateIntegrateGO.setStyleSheet("#gateIntegrateGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#gateIntegrateGO:disabled{\n"
"    background: black;\n"
"}")
        self.gateIntegrateGO.setObjectName("gateIntegrateGO")
        self.GPDspinBox = QtWidgets.QSpinBox(self.gateBox)
        self.GPDspinBox.setGeometry(QtCore.QRect(150, 50, 71, 23))
        self.GPDspinBox.setMinimum(6)
        self.GPDspinBox.setMaximum(30)
        self.GPDspinBox.setProperty("value", 20)
        self.GPDspinBox.setObjectName("GPDspinBox")
        self.label_8 = QtWidgets.QLabel(self.gateBox)
        self.label_8.setGeometry(QtCore.QRect(20, 53, 111, 16))
        self.label_8.setObjectName("label_8")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.groupBox = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox.setObjectName("groupBox")
        self.label_34 = QtWidgets.QLabel(self.groupBox)
        self.label_34.setGeometry(QtCore.QRect(20, 33, 111, 16))
        self.label_34.setObjectName("label_34")
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(self.groupBox)
        self.dateTimeEdit.setGeometry(QtCore.QRect(140, 60, 121, 22))
        self.dateTimeEdit.setDateTime(QtCore.QDateTime(QtCore.QDate(2012, 1, 1), QtCore.QTime(0, 0, 0)))
        self.dateTimeEdit.setCalendarPopup(True)
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(140, 30, 81, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.label_33 = QtWidgets.QLabel(self.groupBox)
        self.label_33.setGeometry(QtCore.QRect(20, 63, 81, 16))
        self.label_33.setObjectName("label_33")
        self.label_36 = QtWidgets.QLabel(self.groupBox)
        self.label_36.setGeometry(QtCore.QRect(20, 140, 61, 16))
        self.label_36.setObjectName("label_36")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_2.setGeometry(QtCore.QRect(140, 140, 321, 22))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.doubleSpinBox_2 = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.doubleSpinBox_2.setGeometry(QtCore.QRect(400, 60, 62, 22))
        self.doubleSpinBox_2.setDecimals(1)
        self.doubleSpinBox_2.setMinimum(-90.0)
        self.doubleSpinBox_2.setMaximum(90.0)
        self.doubleSpinBox_2.setProperty("value", 0.0)
        self.doubleSpinBox_2.setObjectName("doubleSpinBox_2")
        self.doubleSpinBox_3 = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.doubleSpinBox_3.setGeometry(QtCore.QRect(400, 30, 62, 22))
        self.doubleSpinBox_3.setDecimals(1)
        self.doubleSpinBox_3.setMinimum(-90.0)
        self.doubleSpinBox_3.setMaximum(90.0)
        self.doubleSpinBox_3.setProperty("value", 45.0)
        self.doubleSpinBox_3.setObjectName("doubleSpinBox_3")
        self.label_37 = QtWidgets.QLabel(self.groupBox)
        self.label_37.setGeometry(QtCore.QRect(280, 30, 111, 20))
        self.label_37.setObjectName("label_37")
        self.label_38 = QtWidgets.QLabel(self.groupBox)
        self.label_38.setGeometry(QtCore.QRect(280, 61, 111, 20))
        self.label_38.setObjectName("label_38")
        self.spnIntensity = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.spnIntensity.setGeometry(QtCore.QRect(400, 90, 61, 21))
        self.spnIntensity.setObjectName("spnIntensity")
        self.label_51 = QtWidgets.QLabel(self.groupBox)
        self.label_51.setGeometry(QtCore.QRect(280, 90, 111, 20))
        self.label_51.setObjectName("label_51")
        self.line = QtWidgets.QFrame(self.groupBox)
        self.line.setGeometry(QtCore.QRect(20, 120, 441, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label_52 = QtWidgets.QLabel(self.groupBox)
        self.label_52.setGeometry(QtCore.QRect(20, 180, 91, 16))
        self.label_52.setObjectName("label_52")
        self.txtComments = QtWidgets.QTextBrowser(self.groupBox)
        self.txtComments.setGeometry(QtCore.QRect(140, 170, 321, 192))
        self.txtComments.setReadOnly(False)
        self.txtComments.setObjectName("txtComments")
        self.btnSave = QtWidgets.QPushButton(self.groupBox)
        self.btnSave.setGeometry(QtCore.QRect(360, 380, 99, 27))
        self.btnSave.setObjectName("btnSave")
        self.gridLayout_2.addWidget(self.groupBox, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.despikeGroupBox = QtWidgets.QGroupBox(self.tab_6)
        self.despikeGroupBox.setEnabled(False)
        self.despikeGroupBox.setGeometry(QtCore.QRect(110, 100, 480, 120))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.despikeGroupBox.sizePolicy().hasHeightForWidth())
        self.despikeGroupBox.setSizePolicy(sizePolicy)
        self.despikeGroupBox.setMinimumSize(QtCore.QSize(480, 120))
        self.despikeGroupBox.setCheckable(True)
        self.despikeGroupBox.setChecked(False)
        self.despikeGroupBox.setObjectName("despikeGroupBox")
        self.label_25 = QtWidgets.QLabel(self.despikeGroupBox)
        self.label_25.setGeometry(QtCore.QRect(280, 60, 91, 16))
        self.label_25.setObjectName("label_25")
        self.despikeGO = QtWidgets.QPushButton(self.despikeGroupBox)
        self.despikeGO.setGeometry(QtCore.QRect(370, 90, 99, 23))
        self.despikeGO.setStyleSheet("#despikeGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#despikeGO:disabled{\n"
"    background: black;\n"
"}")
        self.despikeGO.setObjectName("despikeGO")
        self.replComboBox = QtWidgets.QComboBox(self.despikeGroupBox)
        self.replComboBox.setGeometry(QtCore.QRect(390, 60, 81, 23))
        self.replComboBox.setObjectName("replComboBox")
        self.replComboBox.addItem("")
        self.replComboBox.addItem("")
        self.replComboBox.addItem("")
        self.replComboBox.addItem("")
        self.replComboBox.addItem("")
        self.replComboBox.addItem("")
        self.windowSpinBox = QtWidgets.QSpinBox(self.despikeGroupBox)
        self.windowSpinBox.setGeometry(QtCore.QRect(180, 30, 81, 22))
        self.windowSpinBox.setMaximum(20000)
        self.windowSpinBox.setProperty("value", 500)
        self.windowSpinBox.setObjectName("windowSpinBox")
        self.thresholdSpinBox = QtWidgets.QDoubleSpinBox(self.despikeGroupBox)
        self.thresholdSpinBox.setGeometry(QtCore.QRect(180, 60, 81, 22))
        self.thresholdSpinBox.setDecimals(1)
        self.thresholdSpinBox.setProperty("value", 5.0)
        self.thresholdSpinBox.setObjectName("thresholdSpinBox")
        self.label_26 = QtWidgets.QLabel(self.despikeGroupBox)
        self.label_26.setGeometry(QtCore.QRect(10, 33, 151, 16))
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.despikeGroupBox)
        self.label_27.setGeometry(QtCore.QRect(10, 62, 141, 16))
        self.label_27.setObjectName("label_27")
        self.label_31 = QtWidgets.QLabel(self.despikeGroupBox)
        self.label_31.setGeometry(QtCore.QRect(10, 94, 57, 14))
        self.label_31.setObjectName("label_31")
        self.rollOnSpinBox = QtWidgets.QSpinBox(self.despikeGroupBox)
        self.rollOnSpinBox.setGeometry(QtCore.QRect(180, 90, 81, 22))
        self.rollOnSpinBox.setMaximum(5000)
        self.rollOnSpinBox.setProperty("value", 500)
        self.rollOnSpinBox.setObjectName("rollOnSpinBox")
        self.despikeInterpWinSpinBox = QtWidgets.QSpinBox(self.despikeGroupBox)
        self.despikeInterpWinSpinBox.setGeometry(QtCore.QRect(410, 30, 56, 22))
        self.despikeInterpWinSpinBox.setMaximum(500)
        self.despikeInterpWinSpinBox.setProperty("value", 20)
        self.despikeInterpWinSpinBox.setObjectName("despikeInterpWinSpinBox")
        self.label_11 = QtWidgets.QLabel(self.despikeGroupBox)
        self.label_11.setGeometry(QtCore.QRect(280, 30, 121, 20))
        self.label_11.setObjectName("label_11")
        self.adaptFDBox = QtWidgets.QGroupBox(self.tab_6)
        self.adaptFDBox.setEnabled(False)
        self.adaptFDBox.setGeometry(QtCore.QRect(100, 260, 480, 83))
        self.adaptFDBox.setCheckable(True)
        self.adaptFDBox.setObjectName("adaptFDBox")
        self.adaptFDGO = QtWidgets.QPushButton(self.adaptFDBox)
        self.adaptFDGO.setGeometry(QtCore.QRect(370, 50, 99, 23))
        self.adaptFDGO.setStyleSheet("#adaptFDGO {\n"
"    background: green;\n"
"}\n"
"\n"
"#adaptFDGO:disabled{\n"
"    background: black;\n"
"}")
        self.adaptFDGO.setObjectName("adaptFDGO")
        self.label_2 = QtWidgets.QLabel(self.adaptFDBox)
        self.label_2.setGeometry(QtCore.QRect(20, 30, 271, 16))
        self.label_2.setObjectName("label_2")
        self.label_50 = QtWidgets.QLabel(self.adaptFDBox)
        self.label_50.setGeometry(QtCore.QRect(20, 50, 281, 16))
        self.label_50.setObjectName("label_50")
        self.tabWidget.addTab(self.tab_6, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.invertButton = QtWidgets.QPushButton(self.tab_4)
        self.invertButton.setGeometry(QtCore.QRect(290, 140, 311, 141))
        self.invertButton.setStyleSheet("#invertButton {\n"
"font-size:29pt;\n"
"font-weight: bold;\n"
"color: white;\n"
"background: red;\n"
"}")
        self.invertButton.setObjectName("invertButton")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.logTextBrowser = QtWidgets.QTextBrowser(self.tab_5)
        self.logTextBrowser.setGeometry(QtCore.QRect(10, 30, 921, 821))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logTextBrowser.sizePolicy().hasHeightForWidth())
        self.logTextBrowser.setSizePolicy(sizePolicy)
        self.logTextBrowser.setObjectName("logTextBrowser")
        self.label_53 = QtWidgets.QLabel(self.tab_5)
        self.label_53.setGeometry(QtCore.QRect(420, 10, 121, 20))
        self.label_53.setObjectName("label_53")
        self.tabWidget.addTab(self.tab_5, "")
        self.horizontalLayout_2.addWidget(self.tabWidget)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.horizontalLayout.addWidget(self.scrollArea)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1000, 23))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionAboutBrewCentral = QtWidgets.QAction(MainWindow)
        self.actionAboutBrewCentral.setObjectName("actionAboutBrewCentral")
        self.actionNothing = QtWidgets.QAction(MainWindow)
        self.actionNothing.setObjectName("actionNothing")
        self.actionTemperature = QtWidgets.QAction(MainWindow)
        self.actionTemperature.setObjectName("actionTemperature")
        self.actionOpen_GMR = QtWidgets.QAction(MainWindow)
        self.actionOpen_GMR.setCheckable(False)
        self.actionOpen_GMR.setObjectName("actionOpen_GMR")
        self.actionProcess = QtWidgets.QAction(MainWindow)
        self.actionProcess.setCheckable(True)
        self.actionProcess.setObjectName("actionProcess")
        self.actionOpen_Preprocessed_Dataset = QtWidgets.QAction(MainWindow)
        self.actionOpen_Preprocessed_Dataset.setEnabled(True)
        self.actionOpen_Preprocessed_Dataset.setObjectName("actionOpen_Preprocessed_Dataset")
        self.actionOpen_VC_Preprocessed_dataset = QtWidgets.QAction(MainWindow)
        self.actionOpen_VC_Preprocessed_dataset.setEnabled(False)
        self.actionOpen_VC_Preprocessed_dataset.setObjectName("actionOpen_VC_Preprocessed_dataset")
        self.actionSave_Preprocessed_Dataset = QtWidgets.QAction(MainWindow)
        self.actionSave_Preprocessed_Dataset.setEnabled(True)
        self.actionSave_Preprocessed_Dataset.setObjectName("actionSave_Preprocessed_Dataset")
        self.actionExport_Preprocessed_Dataset = QtWidgets.QAction(MainWindow)
        self.actionExport_Preprocessed_Dataset.setObjectName("actionExport_Preprocessed_Dataset")
        self.menuFile.addAction(self.actionOpen_GMR)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen_Preprocessed_Dataset)
        self.menuFile.addAction(self.actionOpen_VC_Preprocessed_dataset)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Preprocessed_Dataset)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExport_Preprocessed_Dataset)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuAbout.addAction(self.actionAboutBrewCentral)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        #self.actionClose.activated.connect(MainWindow.close)
        #self.actionAboutBrewCentral.activated.connect(MainWindow.show)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Akvo - sNMR Workbench"))
        self.inputRAWParametersBox.setTitle(_translate("MainWindow", "Input parameters"))
        self.stacksLineEdit.setPlaceholderText(_translate("MainWindow", "required"))
        self.label.setText(_translate("MainWindow", "Stacks"))
        self.label_23.setText(_translate("MainWindow", "Data Channels"))
        self.dataChanLineEdit.setToolTip(_translate("MainWindow", "<html><head/><body><p>Set the data channels that you would like processed.</p><p>This must be a valid set of numpy array indices. Remember that Python uses non end-inclusive indexing. </p><p>So things like [1:3] will use channels 1 and 2</p><p>Any list of valid indices will be accepted, but they must be comma seperated. </p></body></html>"))
        self.dataChanLineEdit.setPlaceholderText(_translate("MainWindow", "required"))
        self.label_24.setText(_translate("MainWindow", "Dead time [ms]"))
        self.DeadTimeSpinBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>This is the instrument dead time that is used. You may remove additonal or less dead time as an option. By default Akvo uses the recommended instrument dead times.</p></body></html>"))
        self.label_28.setText(_translate("MainWindow", "Reference Channels"))
        self.refChanLineEdit.setToolTip(_translate("MainWindow", "<html><head/><body><p>Set the reference channels that you would like processed.</p><p>This must be a valid set of numpy array indices. Remember that Python uses non end-inclusive indexing. </p><p>So things like [1:3] will use channels 1 and 2</p><p>Any list of valid indices will be accepted, but they must be comma seperated. </p><p>Optionally no reference channels are allowed, just leave this field black so it says none</p></body></html>"))
        self.refChanLineEdit.setPlaceholderText(_translate("MainWindow", "none"))
        self.label_29.setText(_translate("MainWindow", "Process FID"))
        self.FIDProcComboBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>For T1 or CPMG pulses, which pulse(s) would you like to process. Note that for very short delay T1 pulses, the first pulse may be disabled. </p></body></html>"))
        self.loadDataPushButton.setText(_translate("MainWindow", "Load Data"))
        self.plotImportCheckBox.setText(_translate("MainWindow", "Plot"))
        self.BandPassBox.setTitle(_translate("MainWindow", "IIR Band-Pass Filter"))
        self.fTypeComboBox.setAccessibleDescription(_translate("MainWindow", "Hello"))
        self.fTypeComboBox.setItemText(0, _translate("MainWindow", "Butterworth"))
        self.fTypeComboBox.setItemText(1, _translate("MainWindow", "Chebychev Type II"))
        self.fTypeComboBox.setItemText(2, _translate("MainWindow", "Elliptic"))
        self.bandPassGO.setText(_translate("MainWindow", "GO"))
        self.label_19.setText(_translate("MainWindow", "Pass Band [Hz]"))
        self.label_20.setText(_translate("MainWindow", "Stop Band [Hz]"))
        self.filterDesignPushButton.setText(_translate("MainWindow", "design"))
        self.label_18.setText(_translate("MainWindow", "Order"))
        self.label_21.setText(_translate("MainWindow", "dead time [ms]"))
        self.label_22.setText(_translate("MainWindow", "gpass [dB]"))
        self.label_32.setText(_translate("MainWindow", "gstop [db]"))
        self.CentralVSpinBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>In case of off-resonant transmitter pulse, you can set the central frequency that will be used for all processing. This has the biggest impact on the band-pass filter, and the frequencies used in inversion. </p></body></html>"))
        self.label_30.setText(_translate("MainWindow", "Central ν Hz"))
        self.label_10.setText(_translate("MainWindow", "Type"))
        self.pushButton_4.setText(_translate("MainWindow", "save"))
        self.headerFileBox.setTitle(_translate("MainWindow", "Header file info"))
        self.headerFileTextBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans\'; font-size:8pt; font-weight:400; font-style:italic;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'DejaVu Serif\'; font-size:9pt;\">Load supported RAW Dataset header from file menu</span></p></body></html>"))
        self.label_4.setText(_translate("MainWindow", "Pulse Type"))
        self.pulseTypeTextBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans\'; font-size:10pt; font-weight:400; font-style:italic;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'DejaVu Serif\';\"><br /></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "ν Tx  [Hz]"))
        self.label_7.setText(_translate("MainWindow", "τ Pulse 1 [ms]"))
        self.label_13.setText(_translate("MainWindow", "τ Delay [ms]"))
        self.label_14.setText(_translate("MainWindow", "Tx tuning [μF]"))
        self.label_15.setText(_translate("MainWindow", "ν Sampling [Hz]"))
        self.label_16.setText(_translate("MainWindow", "τ Pulse 2 [ms]"))
        self.label_9.setText(_translate("MainWindow", "Num. pulse moments"))
        self.downSampleGroupBox.setTitle(_translate("MainWindow", "Downsample and truncate (anti-alias)"))
        self.label_3.setText(_translate("MainWindow", "Truncate [ms]"))
        self.truncateSpinBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Set the final length of your processed record. Note that the use of Adaptive filtering allows for the removal of additional late times. If you do not wish to truncate, leave as 0.</p></body></html>"))
        self.downSampleGO.setText(_translate("MainWindow", "GO"))
        self.label_12.setText(_translate("MainWindow", "Downsample factor"))
        self.adaptBox.setTitle(_translate("MainWindow", "Time-domain RLS Active Noise Suppresion"))
        self.adaptGO.setText(_translate("MainWindow", "GO"))
        self.MTapsSpinBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Number of taps in the time-domain filter</p></body></html>"))
        self.adaptLambdaSpinBox.setToolTip(_translate("MainWindow", "Forgetting factor, how quickly does the filter adapt."))
        self.label_41.setText(_translate("MainWindow", "Filter Taps"))
        self.label_42.setText(_translate("MainWindow", "Forgetting factor (λ)"))
        self.label_43.setText(_translate("MainWindow", "Truncate [ms]"))
        self.adaptTruncateSpinBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>This filter is a time-domain filter that takes some time to get going. Time-domain filters do a better job compared to frequency-domain filters in the presence of non-stationary noise. </p><p>The filter is run backwards, so often the late times will not be cancelled as well. You may trim records off the back using this input. </p></body></html>"))
        self.adaptTruncateSpinBox.setWhatsThis(_translate("MainWindow", "<html><head/><body><p>This filter is a time-domain filter that takes some time to get going. Time-domain filters do a better job compared to frequency-domain filters in the presence of non-stationary noise.  </p><p>The filter is run backwards, so often the late times will not be cancelled as well. You may trim records off the back using this input. </p></body></html>"))
        self.label_44.setText(_translate("MainWindow", "Mu"))
        self.windowFilterGroupBox.setTitle(_translate("MainWindow", "FD Window Filter"))
        self.windowTypeComboBox.setItemText(0, _translate("MainWindow", "Hamming"))
        self.windowTypeComboBox.setItemText(1, _translate("MainWindow", "Hanning"))
        self.windowTypeComboBox.setItemText(2, _translate("MainWindow", "Flat top"))
        self.windowTypeComboBox.setItemText(3, _translate("MainWindow", "Rectangular"))
        self.label_45.setText(_translate("MainWindow", "Type"))
        self.label_48.setText(_translate("MainWindow", "Width [Hz]"))
        self.windowFilterGO.setText(_translate("MainWindow", "GO"))
        self.label_49.setText(_translate("MainWindow", "Central freq from Band-Pass"))
        self.ProcessedBox.setTitle(_translate("MainWindow", "Processed data paramaters"))
        self.label_17.setText(_translate("MainWindow", "FID 1 length [s]"))
        self.label_39.setText(_translate("MainWindow", "FID 2 length [s]"))
        self.label_40.setText(_translate("MainWindow", "ν Sampling [Hz]"))
        self.label_47.setText(_translate("MainWindow", "total dead time"))
        self.sumDataBox.setTitle(_translate("MainWindow", "Combine (sum) data channels"))
        self.sumDataGO.setText(_translate("MainWindow", "GO"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Preprocess RAW"))
        self.FDSmartStackGroupBox.setTitle(_translate("MainWindow", "TD SmartStack^TM"))
        self.outlierTestCB.setItemText(0, _translate("MainWindow", "MAD"))
        self.outlierTestCB.setItemText(1, _translate("MainWindow", "none"))
        self.label_5.setText(_translate("MainWindow", "Outlier test"))
        self.FDSmartStackGO.setText(_translate("MainWindow", "GO"))
        self.qCalcGroupBox.setTitle(_translate("MainWindow", "Pulse Moment Calculation "))
        self.calcQGO.setText(_translate("MainWindow", "GO"))
        self.qdGroupBox.setTitle(_translate("MainWindow", "Quadrature Detect"))
        self.qdGO.setText(_translate("MainWindow", "GO"))
        self.phaseCheck.setText(_translate("MainWindow", "phase data"))
        self.label_35.setText(_translate("MainWindow", "Trim"))
        self.gateBox.setTitle(_translate("MainWindow", "Gate integrate"))
        self.gateIntegrateGO.setText(_translate("MainWindow", "GO"))
        self.label_8.setText(_translate("MainWindow", "Gates per decade "))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Data QC"))
        self.groupBox.setTitle(_translate("MainWindow", "META data"))
        self.label_34.setText(_translate("MainWindow", "Temperature [°C]"))
        self.dateTimeEdit.setDisplayFormat(_translate("MainWindow", "d MMM yyyy HH"))
        self.label_33.setText(_translate("MainWindow", "Survey date"))
        self.label_36.setText(_translate("MainWindow", "Location"))
        self.label_37.setText(_translate("MainWindow", "B Inclination [°]"))
        self.label_38.setText(_translate("MainWindow", "B Declination [°] "))
        self.label_51.setText(_translate("MainWindow", "B Intensity [nT]"))
        self.label_52.setText(_translate("MainWindow", "Comments"))
        self.btnSave.setText(_translate("MainWindow", "&Save"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Survey Parameters"))
        self.despikeGroupBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>Use of the despike filter is not recommended at the current stage. Any input is welcome in improving its functionality. It may be useful in a heavily truncated envelope as is. But for now, it\'s effects cause serious ringing in the filtered signal. </p></body></html>"))
        self.despikeGroupBox.setTitle(_translate("MainWindow", "Despi&ke Filter"))
        self.label_25.setText(_translate("MainWindow", "interpolation "))
        self.despikeGO.setText(_translate("MainWindow", "GO"))
        self.replComboBox.setItemText(0, _translate("MainWindow", "linear"))
        self.replComboBox.setItemText(1, _translate("MainWindow", "nearest"))
        self.replComboBox.setItemText(2, _translate("MainWindow", "zero"))
        self.replComboBox.setItemText(3, _translate("MainWindow", "slinear"))
        self.replComboBox.setItemText(4, _translate("MainWindow", "quadric"))
        self.replComboBox.setItemText(5, _translate("MainWindow", "cubic"))
        self.label_26.setText(_translate("MainWindow", "window width [samples]"))
        self.label_27.setText(_translate("MainWindow", "Threshold [σ]"))
        self.label_31.setText(_translate("MainWindow", "Roll on"))
        self.label_11.setText(_translate("MainWindow", "Inerpolation Widow"))
        self.adaptFDBox.setTitle(_translate("MainWindow", "FD (static transfer function) Noise cancellation"))
        self.adaptFDGO.setText(_translate("MainWindow", "GO"))
        self.label_2.setText(_translate("MainWindow", "Utilizes a window filter (as defined above) "))
        self.label_50.setText(_translate("MainWindow", "Uses central v from Band-pass filter"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("MainWindow", "Forward modelling"))
        self.invertButton.setText(_translate("MainWindow", "Invert"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Inversion"))
        self.logTextBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans Serif\'; font-size:9pt;\">All processing steps are recorded here for your records</span></p></body></html>"))
        self.label_53.setText(_translate("MainWindow", "Processing log"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Log"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuAbout.setTitle(_translate("MainWindow", "Abo&ut"))
        self.actionClose.setText(_translate("MainWindow", "&Close"))
        self.actionAboutBrewCentral.setText(_translate("MainWindow", "&Brew Central"))
        self.actionNothing.setText(_translate("MainWindow", "Nothing"))
        self.actionTemperature.setText(_translate("MainWindow", "Temperature"))
        self.actionOpen_GMR.setText(_translate("MainWindow", "&Open GMR RAW header"))
        self.actionOpen_GMR.setIconText(_translate("MainWindow", "Open GMR RAW dataset(s)"))
        self.actionProcess.setText(_translate("MainWindow", "Process"))
        self.actionOpen_Preprocessed_Dataset.setText(_translate("MainWindow", "Load Avko &Preprocessed dataset"))
        self.actionOpen_VC_Preprocessed_dataset.setText(_translate("MainWindow", "Load &VC Preprocessed dataset"))
        self.actionSave_Preprocessed_Dataset.setText(_translate("MainWindow", "&Save Preprocessed Dataset"))
        self.actionExport_Preprocessed_Dataset.setText(_translate("MainWindow", "Export to Lemma"))

from akvo.gui.mydynamicmplcanvas import MyDynamicMplCanvas
from akvo.gui.mydynamicmplcanvasnavigator import MyDynamicMplCanvasNavigator
